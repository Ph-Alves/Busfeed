# Generated by Django 4.2.7 on 2025-06-18 01:49

from decimal import Decimal
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Linha',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(help_text='Código oficial da linha (ex: 0.111, 0.030)', max_length=20, unique=True)),
                ('nome', models.CharField(help_text='Nome descritivo da linha', max_length=255)),
                ('nome_curto', models.CharField(blank=True, help_text='Nome abreviado para exibição', max_length=100)),
                ('tipo', models.CharField(choices=[('bus', 'Ônibus'), ('metro', 'Metrô'), ('brt', 'BRT'), ('micro', 'Micro-ônibus')], default='bus', help_text='Tipo de transporte da linha', max_length=10)),
                ('status', models.CharField(choices=[('active', 'Ativa'), ('inactive', 'Inativa'), ('maintenance', 'Em Manutenção'), ('temporary', 'Temporária')], default='active', help_text='Status operacional atual', max_length=15)),
                ('origem', models.CharField(help_text='Ponto de origem da linha', max_length=255)),
                ('destino', models.CharField(help_text='Ponto de destino da linha', max_length=255)),
                ('trajeto_descricao', models.TextField(blank=True, help_text='Descrição detalhada do trajeto')),
                ('tarifa', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Valor da tarifa em reais', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('primeiro_horario', models.TimeField(blank=True, help_text='Horário do primeiro ônibus', null=True)),
                ('ultimo_horario', models.TimeField(blank=True, help_text='Horário do último ônibus', null=True)),
                ('intervalo_pico', models.PositiveIntegerField(blank=True, help_text='Intervalo entre ônibus no horário de pico (minutos)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(120)])),
                ('intervalo_normal', models.PositiveIntegerField(blank=True, help_text='Intervalo entre ônibus no horário normal (minutos)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(120)])),
                ('tempo_viagem_estimado', models.PositiveIntegerField(blank=True, help_text='Tempo estimado de viagem completa (minutos)', null=True, validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(300)])),
                ('tem_acessibilidade', models.BooleanField(default=False, help_text='Indica se a linha tem veículos acessíveis')),
                ('cor_linha', models.CharField(blank=True, help_text='Cor da linha em hexadecimal (ex: #FF0000)', max_length=7)),
                ('observacoes', models.TextField(blank=True, help_text='Observações sobre a linha')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Linha',
                'verbose_name_plural': 'Linhas',
                'ordering': ['codigo'],
                'indexes': [models.Index(fields=['codigo'], name='linhas_linh_codigo_1d1bed_idx'), models.Index(fields=['tipo'], name='linhas_linh_tipo_178200_idx'), models.Index(fields=['status'], name='linhas_linh_status_7e5b39_idx')],
            },
        ),
    ]
