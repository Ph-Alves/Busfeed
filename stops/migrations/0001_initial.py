# Generated by Django 4.2.7 on 2025-06-09 20:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='StopAmenity',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Data e hora de criação do registro', verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Data e hora da última atualização', verbose_name='Atualizado em')),
                ('is_active', models.BooleanField(default=True, help_text='Indica se o registro está ativo no sistema', verbose_name='Ativo')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Data e hora em que o registro foi marcado como deletado', null=True, verbose_name='Deletado em')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identificador único universal', primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nome da facilidade/comodidade', max_length=100, verbose_name='Nome')),
                ('description', models.TextField(blank=True, help_text='Descrição detalhada da facilidade', verbose_name='Descrição')),
                ('icon', models.CharField(blank=True, help_text='Nome do ícone para representar esta facilidade', max_length=50, verbose_name='Ícone')),
                ('category', models.CharField(choices=[('accessibility', 'Acessibilidade'), ('comfort', 'Conforto'), ('security', 'Segurança'), ('technology', 'Tecnologia'), ('commercial', 'Comercial'), ('other', 'Outros')], default='other', help_text='Categoria da facilidade', max_length=50, verbose_name='Categoria')),
            ],
            options={
                'verbose_name': 'Facilidade da Parada',
                'verbose_name_plural': 'Facilidades das Paradas',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='StopType',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Data e hora de criação do registro', verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Data e hora da última atualização', verbose_name='Atualizado em')),
                ('is_active', models.BooleanField(default=True, help_text='Indica se o registro está ativo no sistema', verbose_name='Ativo')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Data e hora em que o registro foi marcado como deletado', null=True, verbose_name='Deletado em')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identificador único universal', primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nome do tipo de parada', max_length=50, unique=True, verbose_name='Nome')),
                ('description', models.TextField(blank=True, help_text='Descrição detalhada do tipo de parada', verbose_name='Descrição')),
                ('icon', models.CharField(blank=True, help_text='Nome do ícone para representar este tipo de parada', max_length=50, verbose_name='Ícone')),
                ('color', models.CharField(default='#007bff', help_text='Cor hexadecimal para representar este tipo de parada', max_length=7, verbose_name='Cor')),
            ],
            options={
                'verbose_name': 'Tipo de Parada',
                'verbose_name_plural': 'Tipos de Paradas',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BusStop',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Data e hora de criação do registro', verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Data e hora da última atualização', verbose_name='Atualizado em')),
                ('latitude', models.FloatField(blank=True, help_text='Latitude da localização', null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, help_text='Longitude da localização', null=True, verbose_name='Longitude')),
                ('address', models.TextField(blank=True, help_text='Endereço textual da localização', verbose_name='Endereço')),
                ('is_active', models.BooleanField(default=True, help_text='Indica se o registro está ativo no sistema', verbose_name='Ativo')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Data e hora em que o registro foi marcado como deletado', null=True, verbose_name='Deletado em')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identificador único universal', primary_key=True, serialize=False)),
                ('code', models.CharField(help_text='Código oficial da parada (fornecido pelo DFTrans)', max_length=20, unique=True, verbose_name='Código')),
                ('name', models.CharField(help_text='Nome oficial da parada', max_length=200, verbose_name='Nome')),
                ('nickname', models.CharField(blank=True, help_text='Nome popular ou apelido da parada', max_length=200, verbose_name='Apelido')),
                ('wheelchair_accessible', models.BooleanField(default=False, help_text='Indica se a parada é acessível para cadeirantes', verbose_name='Acessível para Cadeirantes')),
                ('audio_announcements', models.BooleanField(default=False, help_text='Indica se a parada possui anúncios sonoros', verbose_name='Anúncios Sonoros')),
                ('tactile_paving', models.BooleanField(default=False, help_text='Indica se a parada possui piso tátil', verbose_name='Piso Tátil')),
                ('braille_info', models.BooleanField(default=False, help_text='Indica se a parada possui informações em Braille', verbose_name='Informações em Braille')),
                ('has_shelter', models.BooleanField(default=False, help_text='Indica se a parada possui abrigo/cobertura', verbose_name='Possui Abrigo')),
                ('has_seating', models.BooleanField(default=False, help_text='Indica se a parada possui bancos ou assentos', verbose_name='Possui Assentos')),
                ('has_lighting', models.BooleanField(default=False, help_text='Indica se a parada possui iluminação adequada', verbose_name='Possui Iluminação')),
                ('has_security', models.BooleanField(default=False, help_text='Indica se a parada possui câmeras ou segurança', verbose_name='Possui Segurança')),
                ('has_wifi', models.BooleanField(default=False, help_text='Indica se a parada oferece acesso Wi-Fi gratuito', verbose_name='Possui Wi-Fi')),
                ('has_charging_station', models.BooleanField(default=False, help_text='Indica se a parada possui estação de carregamento', verbose_name='Possui Carregador')),
                ('zone', models.CharField(blank=True, help_text='Zona tarifária da parada (se aplicável)', max_length=50, verbose_name='Zona')),
                ('neighborhood', models.CharField(blank=True, help_text='Bairro onde a parada está localizada', max_length=100, verbose_name='Bairro')),
                ('reference_point', models.CharField(blank=True, help_text='Ponto de referência próximo à parada', max_length=200, verbose_name='Ponto de Referência')),
                ('operating_hours_start', models.TimeField(blank=True, help_text='Horário de início de funcionamento da parada', null=True, verbose_name='Início Funcionamento')),
                ('operating_hours_end', models.TimeField(blank=True, help_text='Horário de fim de funcionamento da parada', null=True, verbose_name='Fim Funcionamento')),
                ('data_source', models.CharField(default='DFTrans', help_text='Fonte original dos dados da parada', max_length=100, verbose_name='Fonte dos Dados')),
                ('last_verification', models.DateTimeField(blank=True, help_text='Data da última verificação dos dados da parada', null=True, verbose_name='Última Verificação')),
                ('verified_by_users', models.PositiveIntegerField(default=0, help_text='Número de usuários que verificaram/confirmaram os dados', verbose_name='Verificado por Usuários')),
                ('stop_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stops', to='stops.stoptype', verbose_name='Tipo de Parada')),
            ],
            options={
                'verbose_name': 'Parada de Ônibus',
                'verbose_name_plural': 'Paradas de Ônibus',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserStopReport',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Data e hora de criação do registro', verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Data e hora da última atualização', verbose_name='Atualizado em')),
                ('is_active', models.BooleanField(default=True, help_text='Indica se o registro está ativo no sistema', verbose_name='Ativo')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Data e hora em que o registro foi marcado como deletado', null=True, verbose_name='Deletado em')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identificador único universal', primary_key=True, serialize=False)),
                ('report_type', models.CharField(choices=[('incorrect_info', 'Informação Incorreta'), ('facility_broken', 'Facilidade Quebrada'), ('missing_facility', 'Facilidade Ausente'), ('new_facility', 'Nova Facilidade'), ('accessibility_issue', 'Problema de Acessibilidade'), ('safety_concern', 'Problema de Segurança'), ('other', 'Outros')], help_text='Tipo do problema ou atualização reportada', max_length=50, verbose_name='Tipo de Relatório')),
                ('title', models.CharField(help_text='Título resumido do relatório', max_length=200, verbose_name='Título')),
                ('description', models.TextField(help_text='Descrição detalhada do problema ou sugestão', verbose_name='Descrição')),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('investigating', 'Investigando'), ('confirmed', 'Confirmado'), ('resolved', 'Resolvido'), ('rejected', 'Rejeitado')], default='pending', help_text='Status atual do relatório', max_length=20, verbose_name='Status')),
                ('admin_notes', models.TextField(blank=True, help_text='Observações da equipe administrativa', verbose_name='Observações do Admin')),
                ('stop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_reports', to='stops.busstop', verbose_name='Parada')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stop_reports', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Relatório de Usuário',
                'verbose_name_plural': 'Relatórios de Usuários',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status'], name='stops_users_status_db9f11_idx'), models.Index(fields=['report_type'], name='stops_users_report__216b4e_idx')],
            },
        ),
        migrations.CreateModel(
            name='StopAmenityMapping',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Data e hora de criação do registro', verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Data e hora da última atualização', verbose_name='Atualizado em')),
                ('is_active', models.BooleanField(default=True, help_text='Indica se o registro está ativo no sistema', verbose_name='Ativo')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Data e hora em que o registro foi marcado como deletado', null=True, verbose_name='Deletado em')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identificador único universal', primary_key=True, serialize=False)),
                ('is_working', models.BooleanField(default=True, help_text='Indica se a facilidade está funcionando no momento', verbose_name='Funcionando')),
                ('notes', models.TextField(blank=True, help_text='Observações sobre o estado ou funcionamento da facilidade', verbose_name='Observações')),
                ('verified_date', models.DateTimeField(blank=True, help_text='Data da última verificação do estado da facilidade', null=True, verbose_name='Data de Verificação')),
                ('amenity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stop_mappings', to='stops.stopamenity', verbose_name='Facilidade')),
                ('stop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='amenity_mappings', to='stops.busstop', verbose_name='Parada')),
            ],
            options={
                'verbose_name': 'Facilidade da Parada',
                'verbose_name_plural': 'Facilidades das Paradas',
                'ordering': ['stop__name', 'amenity__name'],
                'unique_together': {('stop', 'amenity')},
            },
        ),
        migrations.AddIndex(
            model_name='busstop',
            index=models.Index(fields=['code'], name='stops_busst_code_2c1da5_idx'),
        ),
        migrations.AddIndex(
            model_name='busstop',
            index=models.Index(fields=['neighborhood'], name='stops_busst_neighbo_dc7eca_idx'),
        ),
        migrations.AddIndex(
            model_name='busstop',
            index=models.Index(fields=['zone'], name='stops_busst_zone_79e4bd_idx'),
        ),
    ]
