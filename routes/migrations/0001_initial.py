# Generated by Django 4.2.7 on 2025-06-11 00:21

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('stops', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BusRoute',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Data e hora de criação do registro', verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Data e hora da última atualização', verbose_name='Atualizado em')),
                ('latitude', models.FloatField(blank=True, help_text='Latitude da localização', null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, help_text='Longitude da localização', null=True, verbose_name='Longitude')),
                ('address', models.TextField(blank=True, help_text='Endereço textual da localização', verbose_name='Endereço')),
                ('is_active', models.BooleanField(default=True, help_text='Indica se o registro está ativo no sistema', verbose_name='Ativo')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Data e hora em que o registro foi marcado como deletado', null=True, verbose_name='Deletado em')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identificador único universal', primary_key=True, serialize=False)),
                ('number', models.CharField(help_text='Número oficial da linha', max_length=20, verbose_name='Número')),
                ('name', models.CharField(help_text='Nome descritivo da linha', max_length=200, verbose_name='Nome')),
                ('short_name', models.CharField(blank=True, help_text='Nome resumido da linha para exibição', max_length=100, verbose_name='Nome Resumido')),
                ('description', models.TextField(blank=True, help_text='Descrição detalhada da rota', verbose_name='Descrição')),
                ('origin_terminal', models.CharField(help_text='Terminal ou ponto de partida', max_length=200, verbose_name='Terminal de Origem')),
                ('destination_terminal', models.CharField(help_text='Terminal ou ponto final', max_length=200, verbose_name='Terminal de Destino')),
                ('path', models.TextField(blank=True, help_text='Descrição textual do trajeto da rota', verbose_name='Trajeto')),
                ('is_circular', models.BooleanField(default=False, help_text='Indica se a rota é circular (sem volta)', verbose_name='Rota Circular')),
                ('is_bidirectional', models.BooleanField(default=True, help_text='Indica se a rota opera nos dois sentidos', verbose_name='Bidirecional')),
                ('operates_weekdays', models.BooleanField(default=True, help_text='Indica se opera em dias úteis', verbose_name='Opera Dias Úteis')),
                ('operates_saturdays', models.BooleanField(default=True, help_text='Indica se opera aos sábados', verbose_name='Opera Sábados')),
                ('operates_sundays', models.BooleanField(default=False, help_text='Indica se opera aos domingos e feriados', verbose_name='Opera Domingos')),
                ('first_departure', models.TimeField(blank=True, help_text='Horário da primeira partida', null=True, verbose_name='Primeira Partida')),
                ('last_departure', models.TimeField(blank=True, help_text='Horário da última partida', null=True, verbose_name='Última Partida')),
                ('average_frequency', models.PositiveIntegerField(blank=True, help_text='Frequência média entre partidas em minutos', null=True, verbose_name='Frequência Média (min)')),
                ('estimated_duration', models.PositiveIntegerField(blank=True, help_text='Duração estimada do trajeto completo em minutos', null=True, verbose_name='Duração Estimada (min)')),
                ('base_fare', models.DecimalField(blank=True, decimal_places=2, help_text='Tarifa base da rota', max_digits=6, null=True, verbose_name='Tarifa Base')),
                ('accepts_integration', models.BooleanField(default=True, help_text='Indica se aceita integração tarifária', verbose_name='Aceita Integração')),
                ('wheelchair_accessible', models.BooleanField(default=False, help_text='Indica se a frota é acessível para cadeirantes', verbose_name='Acessível para Cadeirantes')),
                ('audio_announcements', models.BooleanField(default=False, help_text='Indica se possui anúncios sonoros', verbose_name='Anúncios Sonoros')),
                ('data_source', models.CharField(default='DFTrans', help_text='Fonte original dos dados da rota', max_length=100, verbose_name='Fonte dos Dados')),
                ('last_update', models.DateTimeField(blank=True, help_text='Data da última atualização dos dados', null=True, verbose_name='Última Atualização')),
            ],
            options={
                'verbose_name': 'Rota de Ônibus',
                'verbose_name_plural': 'Rotas de Ônibus',
                'ordering': ['number', 'name'],
            },
        ),
        migrations.CreateModel(
            name='RouteType',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Data e hora de criação do registro', verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Data e hora da última atualização', verbose_name='Atualizado em')),
                ('is_active', models.BooleanField(default=True, help_text='Indica se o registro está ativo no sistema', verbose_name='Ativo')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Data e hora em que o registro foi marcado como deletado', null=True, verbose_name='Deletado em')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identificador único universal', primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nome do tipo de rota', max_length=50, unique=True, verbose_name='Nome')),
                ('description', models.TextField(blank=True, help_text='Descrição detalhada do tipo de rota', verbose_name='Descrição')),
                ('icon', models.CharField(blank=True, help_text='Nome do ícone para representar este tipo de rota', max_length=50, verbose_name='Ícone')),
                ('color', models.CharField(default='#007bff', help_text='Cor hexadecimal para representar este tipo de rota', max_length=7, verbose_name='Cor')),
                ('fare_multiplier', models.DecimalField(decimal_places=2, default=1.0, help_text='Multiplicador aplicado à tarifa base', max_digits=4, verbose_name='Multiplicador de Tarifa')),
            ],
            options={
                'verbose_name': 'Tipo de Rota',
                'verbose_name_plural': 'Tipos de Rotas',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TransportCompany',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Data e hora de criação do registro', verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Data e hora da última atualização', verbose_name='Atualizado em')),
                ('is_active', models.BooleanField(default=True, help_text='Indica se o registro está ativo no sistema', verbose_name='Ativo')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Data e hora em que o registro foi marcado como deletado', null=True, verbose_name='Deletado em')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identificador único universal', primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nome da empresa de transporte', max_length=200, verbose_name='Nome')),
                ('short_name', models.CharField(blank=True, help_text='Nome abreviado da empresa', max_length=50, verbose_name='Nome Abreviado')),
                ('cnpj', models.CharField(help_text='CNPJ da empresa', max_length=18, unique=True, verbose_name='CNPJ')),
                ('phone', models.CharField(blank=True, help_text='Telefone de contato da empresa', max_length=20, verbose_name='Telefone')),
                ('email', models.EmailField(blank=True, help_text='Email de contato da empresa', max_length=254, verbose_name='Email')),
                ('website', models.URLField(blank=True, help_text='Website oficial da empresa', verbose_name='Website')),
                ('license_number', models.CharField(blank=True, help_text='Número da licença de operação', max_length=50, verbose_name='Número da Licença')),
            ],
            options={
                'verbose_name': 'Empresa de Transporte',
                'verbose_name_plural': 'Empresas de Transporte',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Data e hora de criação do registro', verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Data e hora da última atualização', verbose_name='Atualizado em')),
                ('is_active', models.BooleanField(default=True, help_text='Indica se o registro está ativo no sistema', verbose_name='Ativo')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Data e hora em que o registro foi marcado como deletado', null=True, verbose_name='Deletado em')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identificador único universal', primary_key=True, serialize=False)),
                ('fleet_number', models.CharField(help_text='Número identificador do veículo na frota', max_length=20, unique=True, verbose_name='Número da Frota')),
                ('license_plate', models.CharField(help_text='Placa do veículo', max_length=8, unique=True, verbose_name='Placa')),
                ('model', models.CharField(help_text='Modelo do veículo', max_length=100, verbose_name='Modelo')),
                ('manufacturer', models.CharField(help_text='Fabricante do veículo', max_length=100, verbose_name='Fabricante')),
                ('year', models.PositiveIntegerField(help_text='Ano de fabricação', verbose_name='Ano')),
                ('capacity', models.PositiveIntegerField(help_text='Capacidade total de passageiros', verbose_name='Capacidade')),
                ('fuel_type', models.CharField(choices=[('diesel', 'Diesel'), ('gasoline', 'Gasolina'), ('ethanol', 'Etanol'), ('electric', 'Elétrico'), ('hybrid', 'Híbrido'), ('cng', 'GNV')], default='diesel', help_text='Tipo de combustível utilizado', max_length=20, verbose_name='Tipo de Combustível')),
                ('wheelchair_accessible', models.BooleanField(default=False, help_text='Indica se o veículo é acessível para cadeirantes', verbose_name='Acessível para Cadeirantes')),
                ('low_floor', models.BooleanField(default=False, help_text='Indica se o veículo possui piso baixo', verbose_name='Piso Baixo')),
                ('audio_system', models.BooleanField(default=False, help_text='Indica se possui sistema de anúncios sonoros', verbose_name='Sistema de Áudio')),
                ('air_conditioning', models.BooleanField(default=False, help_text='Indica se possui ar condicionado', verbose_name='Ar Condicionado')),
                ('is_operational', models.BooleanField(default=True, help_text='Indica se o veículo está em operação', verbose_name='Operacional')),
                ('last_maintenance', models.DateField(blank=True, help_text='Data da última manutenção', null=True, verbose_name='Última Manutenção')),
                ('transport_company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vehicles', to='routes.transportcompany', verbose_name='Empresa de Transporte')),
            ],
            options={
                'verbose_name': 'Veículo',
                'verbose_name_plural': 'Veículos',
                'ordering': ['fleet_number'],
            },
        ),
        migrations.CreateModel(
            name='RouteStop',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Data e hora de criação do registro', verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Data e hora da última atualização', verbose_name='Atualizado em')),
                ('is_active', models.BooleanField(default=True, help_text='Indica se o registro está ativo no sistema', verbose_name='Ativo')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Data e hora em que o registro foi marcado como deletado', null=True, verbose_name='Deletado em')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identificador único universal', primary_key=True, serialize=False)),
                ('direction', models.CharField(choices=[('ida', 'Ida'), ('volta', 'Volta'), ('circular', 'Circular')], help_text='Direção do trajeto (ida, volta ou circular)', max_length=20, verbose_name='Direção')),
                ('sequence', models.PositiveIntegerField(help_text='Ordem da parada na rota', verbose_name='Sequência')),
                ('distance_from_origin', models.FloatField(blank=True, help_text='Distância em quilômetros desde a origem', null=True, verbose_name='Distância da Origem (km)')),
                ('estimated_time_from_origin', models.PositiveIntegerField(blank=True, help_text='Tempo estimado em minutos desde a origem', null=True, verbose_name='Tempo Estimado da Origem (min)')),
                ('is_timing_point', models.BooleanField(default=False, help_text='Indica se é um ponto de controle de horário', verbose_name='Ponto de Controle')),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='route_stops', to='routes.busroute', verbose_name='Rota')),
                ('stop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='route_stops', to='stops.busstop', verbose_name='Parada')),
            ],
            options={
                'verbose_name': 'Parada da Rota',
                'verbose_name_plural': 'Paradas das Rotas',
                'ordering': ['route', 'direction', 'sequence'],
            },
        ),
        migrations.AddField(
            model_name='busroute',
            name='route_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='routes', to='routes.routetype', verbose_name='Tipo de Rota'),
        ),
        migrations.AddField(
            model_name='busroute',
            name='transport_company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='routes', to='routes.transportcompany', verbose_name='Empresa de Transporte'),
        ),
        migrations.CreateModel(
            name='VehicleLocation',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Data e hora de criação do registro', verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Data e hora da última atualização', verbose_name='Atualizado em')),
                ('latitude', models.FloatField(blank=True, help_text='Latitude da localização', null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, help_text='Longitude da localização', null=True, verbose_name='Longitude')),
                ('address', models.TextField(blank=True, help_text='Endereço textual da localização', verbose_name='Endereço')),
                ('is_active', models.BooleanField(default=True, help_text='Indica se o registro está ativo no sistema', verbose_name='Ativo')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Data e hora em que o registro foi marcado como deletado', null=True, verbose_name='Deletado em')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identificador único universal', primary_key=True, serialize=False)),
                ('speed', models.FloatField(blank=True, help_text='Velocidade atual em km/h', null=True, verbose_name='Velocidade (km/h)')),
                ('heading', models.FloatField(blank=True, help_text='Direção em graus (0-360)', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(360)], verbose_name='Direção (graus)')),
                ('passenger_count', models.PositiveIntegerField(blank=True, help_text='Número atual de passageiros no veículo', null=True, verbose_name='Contagem de Passageiros')),
                ('route', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vehicle_locations', to='routes.busroute', verbose_name='Rota')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='routes.vehicle', verbose_name='Veículo')),
            ],
            options={
                'verbose_name': 'Localização do Veículo',
                'verbose_name_plural': 'Localizações dos Veículos',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['vehicle', '-created_at'], name='routes_vehi_vehicle_1c9c43_idx'), models.Index(fields=['route', '-created_at'], name='routes_vehi_route_i_bf2267_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=models.Index(fields=['transport_company', 'is_operational'], name='routes_vehi_transpo_2673ac_idx'),
        ),
        migrations.AddIndex(
            model_name='routestop',
            index=models.Index(fields=['route', 'direction', 'sequence'], name='routes_rout_route_i_921197_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='routestop',
            unique_together={('route', 'stop', 'direction', 'sequence')},
        ),
        migrations.AddIndex(
            model_name='busroute',
            index=models.Index(fields=['number'], name='routes_busr_number_31b366_idx'),
        ),
        migrations.AddIndex(
            model_name='busroute',
            index=models.Index(fields=['operates_weekdays', 'operates_saturdays', 'operates_sundays'], name='routes_busr_operate_58ca89_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='busroute',
            unique_together={('number', 'transport_company')},
        ),
    ]
